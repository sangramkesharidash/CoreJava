#https://www.baeldung.com/java-8-date-time-intro
https://stackoverflow.com/questions/14581205/bufferedreader-readline-waits-for-input-from-console

Constraints

Output Format

Output the correct day in capital letters.

Sample Input

08 05 2015
Sample Output

WEDNESDAY
Explanation

The day on August th  was WEDNESDAY.


import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;
import java.util.Scanner;
import java.text.SimpleDateFormat;  
import java.util.Date;  
import java.time.LocalDate;


public class DateTimeSc {

    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
		
        int a = scan.nextInt();
		int b = scan.nextLong(); 
		int c = scan.nextLine(); 
		
 
	System.out.println("MONTH:" + c);
	System.out.println("DAY:" + b);
    System.out.println("YEAR:" + a);
 
 
 String s1 = Integer.toString(a); 
 String s2 = Integer.toString(b); 
 String s3 = Integer.toString(c); 	
 String s4 = s1+s2+s3;
 System.out.println("s4:::"+s4);
 
 LocalDate a = LocalDate.of(2014, 6, 30);
System.out.println(a.getDayOfWeek().name());



 String sDate1 = s1+"/"+s2+"/"+s3;   //String sDate1="31/12/1998";  
Date date1=new SimpleDateFormat("dd/MM/yyyy").parse(sDate1);  
System.out.println(date1);


DayOfWeek sunday = LocalDate.parse("2016-06-12").getDayOfWeek();


	
//String iConcat = a"-"+b"-"+c ;
//System.out.println("iConcat = "+ iConcat);


LocalDate myObj = LocalDate.now(); // Create a date object
System.out.println(myObj); // Display the current date



    }
}



===================================================================
SimpleDateFormat formatter = new SimpleDateFormat("dd-MM-yyyy HH:mm:ss");
System.out.println(formatter.format(calendar.getTime()));


====================================================================



import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'findDay' function below.
     *
     * The function is expected to return a STRING.
     * The function accepts following parameters:
     *  1. INTEGER month
     *  2. INTEGER day
     *  3. INTEGER year
     */

    public static String findDay(int month, int day, int year) {

System.out.println(" MONTH "+ month);
System.out.println(" DAY "+ day);
System.out.println(" YEAR "+ year );

    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        String[] firstMultipleInput = bufferedReader.readLine().replaceAll("\\s+$", "").split(" ");

        int month = Integer.parseInt(firstMultipleInput[0]);

        int day = Integer.parseInt(firstMultipleInput[1]);

        int year = Integer.parseInt(firstMultipleInput[2]);

        String res = Result.findDay(month, day, year);

        bufferedWriter.write(res);
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
